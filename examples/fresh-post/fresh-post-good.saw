let whoknows_spec : CrucibleSetup () = do {
  llvm_execute_func [];
  y <- llvm_fresh_var "y" (llvm_int 32);
  llvm_return (llvm_term y);
};

let example_spec : CrucibleSetup () = do {
  llvm_execute_func [];
  llvm_return (llvm_term {{0:[32]}});
};

let one_spec : CrucibleSetup () = do {
  llvm_execute_func [];
  x <- llvm_fresh_var "x" (llvm_int 32);
  llvm_return (llvm_term x);
};

let main : TopLevel () = do {

    m <- llvm_load_module "source.bc";
    whoknows <- llvm_unsafe_assume_spec m "whoknows" whoknows_spec;
    llvm_verify m "example" [whoknows] false example_spec abc;
    llvm_verify m "one" [] false one_spec ( do { print_goal; abc; } );
    print "done";
};
